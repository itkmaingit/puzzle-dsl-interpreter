structs:
	A = combine ( C , { H, V } );
	Ah = combine ( C , { H } );
	Av = combine ( C , { V } );

domain-hidden:
	P <-> { null } -> { null };
	C <-> { 1 ... n, x } -> { 1 ... n};
	Ep <-> { null } -> { null };
	Ec <-> { null } -> { null };
	A <-> { null } -> { null };
	Ah <-> { null } -> { null };
	Av <-> { null } -> { null };

constraints:
	n == m;
	fill(Ah);
	fill(Av);
	All(ah) <- B(Ah), (|ah| == 9 && all_different(ah));
	All(av) <- B(Av), (|av| == 9 && all_different(av));
	|B(A)| == 1;
	All(c) <- B(C), ([solution(c) == x] <=> [Exists(a) <- B(A), (All(aa) <- a, (!(c <- a))) && [{co <- connect(c, {H, V}) | solution(co) == x} == None]]);
